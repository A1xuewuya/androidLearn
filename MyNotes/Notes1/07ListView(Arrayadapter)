实现ListView的一般步骤

在布局文件中编写代码(xml)
      添加ListView标签(main.xml)
在Activity中编写代码(java)
      获取ListView对象
      准备数据源(Array数组)
      配置适配器(三种adapter)
      将适配器关联到ListView


-----------listView布局文件

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context="com.example.administrator.test.MainActivity">

    <!--listVieW标签-->
    <ListView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:id="@+id/lv"></ListView>
        
    <!--ListView分割线颜色及宽度-->
    <!--android:divider="#ff0000"-->
    <!--android:dividerHeight="10px"-->
    <!--设置滚动条消失-->
    <!--android:scrollbars="none"-->
    <!--滚动条不自动隐藏-->
    <!--android:fadeScrollbars="false"-->

</LinearLayout>

-----------源文件

package com.example.administrator.test;

import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.widget.ArrayAdapter;
import android.widget.ListView;

public class MainActivity extends AppCompatActivity {

    private ListView lv;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        //1.获取ListView对象
        lv= (ListView) findViewById(R.id.lv);

        //2.准备数据源
        String[] data={"初识安卓","开发环境","基础控件","线性布局","相对布局"}; //数据可以放入很多

        //3.准备适配器Adapter
        ArrayAdapter<String> adapter=new ArrayAdapter<String>(
                MainActivity.this,   //上下文
                android.R.layout.simple_list_item_1,  //行布局，系统自带的布局
                data     //数据源
        );

        //4.将适配器关联到ListView
        lv.setAdapter(adapter);

    }
}


