
==================小案例

package com.example.administrator.test;

import android.app.DatePickerDialog;
import android.app.TimePickerDialog;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.TimePicker;
import android.widget.Toast;

import java.util.Calendar;

public class TimeActivity extends AppCompatActivity implements View.OnClickListener {
    private Button btn_date;
    private Button btn_time;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_time);


        btn_date= (Button) findViewById(R.id.btn_date);
        btn_time= (Button) findViewById(R.id.btn_time);

        btn_date.setOnClickListener(this);
        btn_time.setOnClickListener(this);
    }

    @Override
    public void onClick(View view) {
        switch (view.getId()){
            case R.id.btn_date:
                Calendar c = Calendar.getInstance();
                // 直接创建一个DatePickerDialog对话框实例，并将它显示出来
                new DatePickerDialog(this,
                        // 绑定监听器
                        new DatePickerDialog.OnDateSetListener() {
                            @Override
                            public void onDateSet(DatePicker dp, int year,
                                                  int month, int dayOfMonth) {
                                String text = "您选择了：" + year + "年" + (month + 1)
                                        + "月" + dayOfMonth + "日";
                                Toast.makeText(TimeActivity.this, text,
                                        Toast.LENGTH_LONG).show();
                            }
                        }
                        //设置初始日期
                        , c.get(Calendar.YEAR)
                        , c.get(Calendar.MONTH)
                        , c.get(Calendar.DAY_OF_MONTH)).show();
                break;
            case R.id.btn_time:
                Calendar d = Calendar.getInstance();
                // 创建一个TimePickerDialog实例，并把它显示出来。
                new TimePickerDialog(this,
                        // 绑定监听器
                        new TimePickerDialog.OnTimeSetListener() {
                            @Override
                            public void onTimeSet(TimePicker tp, int hourOfDay,
                                                  int minute) {
                                String text = "您选择了：" + hourOfDay + "时" + minute
                                        + "分";
                                Toast.makeText(TimeActivity.this, text,
                                        Toast.LENGTH_LONG).show();
                            }
                        }
                        //设置初始时间
                        , d.get(Calendar.HOUR_OF_DAY)
                        , d.get(Calendar.MINUTE)
                        //true表示采用24小时制
                        , true).show();
                break;
        }

    }



}





======================日期选择器


package com.example.administrator.test;

import android.app.DatePickerDialog;
import android.app.TimePickerDialog;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.TimePicker;
import android.widget.Toast;

import java.util.Calendar;

import static com.example.administrator.test.R.id.btn;
import static com.example.administrator.test.R.id.btn_time;

public class TimeActivity extends AppCompatActivity implements View.OnClickListener {
    private Button btn_date;
    private Button btn_time;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_time);


        btn_date= (Button) findViewById(R.id.btn_date);
        btn_time= (Button) findViewById(R.id.btn_time);

        btn_date.setOnClickListener(this);
        btn_time.setOnClickListener(this);
    }

    @Override
    public void onClick(View view) {
        switch (view.getId()){
            case R.id.btn_date:
                Calendar c = Calendar.getInstance();
                // 直接创建一个DatePickerDialog对话框实例，并将它显示出来
                new DatePickerDialog(this,
                        // 绑定监听器
                        new DatePickerDialog.OnDateSetListener() {
                            @Override
                            public void onDateSet(DatePicker dp, int year,
                                                  int month, int dayOfMonth) {
                                String text = "您选择了：" + year + "年" + (month + 1)
                                        + "月" + dayOfMonth + "日";
                                Toast.makeText(TimeActivity.this, text,
                                        Toast.LENGTH_LONG).show();
                            }
                        }
                        //设置初始日期
                        , c.get(Calendar.YEAR)
                        , c.get(Calendar.MONTH)
                        , c.get(Calendar.DAY_OF_MONTH)).show();
                break;
            case btn_time:
                Calendar d = Calendar.getInstance();
                // 创建一个TimePickerDialog实例，并把它显示出来。
                new TimePickerDialog(this,
                        // 绑定监听器
                        new TimePickerDialog.OnTimeSetListener() {
                            @Override
                            public void onTimeSet(TimePicker tp, int hourOfDay,
                                                  int minute) {
                                String text = "您选择了：" + hourOfDay + "时" + minute
                                        + "分";
                                Toast.makeText(TimeActivity.this, text,
                                        Toast.LENGTH_LONG).show();
                            }
                        }
                        //设置初始时间
                        , d.get(Calendar.HOUR_OF_DAY)
                        , d.get(Calendar.MINUTE)
                        //true表示采用24小时制
                        , true).show();
                break;
        }

    }



}


================时间选择器


    public void btnClick(View v) {

        Calendar c = Calendar.getInstance();
        // 创建一个TimePickerDialog实例，并把它显示出来。
        new TimePickerDialog(this,
                // 绑定监听器
                new TimePickerDialog.OnTimeSetListener() {
                    @Override
                    public void onTimeSet(TimePicker tp, int hourOfDay,
                                          int minute) {
                        String text = "您选择了：" + hourOfDay + "时" + minute
                                + "分";
                        Toast.makeText(MainActivity7.this, text,
                                Toast.LENGTH_LONG).show();
                    }
                }
                //设置初始时间
                , c.get(Calendar.HOUR_OF_DAY)
                , c.get(Calendar.MINUTE)
                //true表示采用24小时制
                , true).show();
    }
    
    
    
    
